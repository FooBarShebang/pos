@startuml

title Activity Diagram of the Property utils.traceback.StackTraceback.Info

start

if (list of callers is empty?) then (No)
    while (for each pair of <b>Caller</b> and <b>FrameRecord</b>)
        :extract <b>Path</b> - the second element of the <b>FrameRecord</b> ;
        
        :extract <b>LineNumber</b> - line number in the code - the third element of the <b>FrameRecord</b> ;
        
        :extract <b>CodeLines</b> - list of the source code lines - the fifth element of the <b>FrameRecord</b> ;
        
        :extract <b>LineIndex</b> - position of the code line in the <b>CodeLines</b> - the sixth element of the <b>FrameRecord</b> ;
        
        :add line indicating the fully qualified name of the caller;
        
        :add line indicating the path to the module and line number;
        
        if (<b>CodeLines</b> list is not empty?) then (Yes)
        :get the length of the string representation of the maximum line number (<b>LineNumber + LineIndex</b>);
        
        while (for each <b>Line</b> in <b>CodeLines</b>)
            :form the string prefix with the actual line number left zero padded to the maximum length;
            
            if (current line is the call point?) then (Yes)
                :add '>' before the line number prefix and a whitespace after;
            else (No)
                :wrap line number prefix with whitespaces on both sides;
            endif
            
            :combine line number prefix with the actual source code line <b>Line</b> ;
            
            if (resulting string length exceed the desired console width?) then (True)
                :truncate the string to the (console width - 3), and add '...' at the end;
            endif
            
            :add the formed annotated source code line to the sting buffer;
        end while
        endif
    end while
    
    :return the formed multi-line string;
else (yes)
    :return an empty string>
endif

stop

@enduml