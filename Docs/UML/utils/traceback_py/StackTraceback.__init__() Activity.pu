@startuml

title Activity Diagram of the Method utils.traceback.StackTraceback._ _init_ _()

start

:<b>SkipFrames</b> - optional non-negative integer, number of the innermost frames to skip
<b>LinesNumber</b> - optional non-negative integer, number of lines of source code per frame
<b>Width</b> - optional non-negative integer, total width of the code lines + line numbers to truncate to<

if (<b>LinesNumber</b> is integer AND <b>LinesNumber</b> > 0 ?) then (True)
    :<b>self.ContextLength</b> = <b>LinesNumber</b> ;
else (False)
    :copy the value stored in the corresponding class data attribute
    <b>self.ContextLength</b> = <b>self._ _class_ _.ContextLength</b> ;
endif

if (<b>Width</b> is integer AND <b>Width</b> > 0 ?) then (True)
    :<b>self.ConsoleWidth</b> = <b>Width</b> ;
else (False)
    :copy the value stored in the corresponding class data attribute
    <b>self.ConsoleWidth</b> = <b>self._ _class_ _.ConsoleWidth</b> ;
endif

:obtain the system call stack using <b>inspect.stack</b>() function with <b>self.ContextLength</b> lines of code per frame;

:reverse the order of the frames -> as <b>Traceback</b> ;

if (exception is raised?) then (No)
    if (<b>SkipFrames</b> is integer AND <b>SkipFrames</b> > 0 AND (<b>SkipFrames</b> + 1) < len(<b>SkipFrames</b>)) then (True)
        :remove (<b>SkipFrames</b> + 1) last elements (frames) from the <b>Traceback</b> ;
    else (False)
        :remove only the last element (frame) from the <b>Traceback</b> ;
    endif
    
    :store the remaining list of frames in <b>self.__tblstTraceback</b> 'private' instance atttribute;
else (Yes)
    :store <b>None</b> instead of the traceback frames;
endif

stop

@enduml