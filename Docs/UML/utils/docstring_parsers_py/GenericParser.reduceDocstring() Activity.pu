@startuml

title Activity Diagram of the Method utils.docstring_parsers.GenericParser.reduceDocstring()

start

:<b>DocString</b> - string, the doc-string to be 'trimmed'<

:trim <b>DocString</b> using method <b>trimDocString</b>() -> <b>TrimmedDocstring</b> |

:split <b>TrimmedDocstring</b> into lines by new-line character -> <b>Buffer</b>::list(str);

:<b>Index</b> = 0;

:initialise <b>NewBuffer</b> as an empty list;

while (while <b>Index</b> < length of <b>TrimmedDocstring</b>)
    :<b>Line</b> = <b>Buffer</b>[<b>Index</b>] with heading spaces removed;
    if (SkipTokens are defined?) then (False)
        :add <b>Line</b> into <b>NewBuffer</b> ;
        
        :increment <b>Index</b>++;
    else (True)
        if (<b>Line</b> starts with a token (case insensitive)?) then (False)
            :add <b>Line</b> into <b>NewBuffer</b> ;
            
            :increment <b>Index</b>++;
        else (True)
            if (token requires second line?) then (True)
                if (next line (stripped) starts with proper token?) then (True)
                    :set <b>SkipFlag</b> to True;
                    
                    :increment <b>Index</b>++;
                else (False)
                    :set <b>SkipFlag</b> to False;
                endif
            else (False)
                :set <b>SkipFlag</b> to True;
            endif
            if (<b>SkipFlag</b> is True?) then (No)
                :add <b>Line</b> into <b>NewBuffer</b> ;
                
                :increment <b>Index</b>++;
            else(Yes)
                :increment <b>Index</b>++;
                if (<b>Index</b> < length of <b>TrimmedDocstring</b>?) then (True)
                    :<b>NewLine</b> = <b>Buffer</b>[<b>Index</b>]\nwith heading spaces removed;
                    
                    while (while <b>Index</b> < length of <b>TrimmedDocstring</b>\nAND <b>NewLine</b> is not empty\nAND <b>NewLine</b> does not start with a token)
                        :increment <b>Index</b>++;
                        
                        :<b>NewLine</b> = <b>Buffer</b>[<b>Index</b>]\nwith heading spaces removed;
                    end while
                endif
            endif
        endif
    endif
end while

:merge all lines in <b>NewBuffer</b> into a single string
<b>Result</b> using new-line characters in between;

:return <b>Result</b> string>

stop

@enduml